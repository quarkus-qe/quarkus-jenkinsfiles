pipeline {
    agent any
    triggers {
        cron('H H(16-17) * * *')
    }
    tools {
        jdk 'graalvm'
    }
    options {
        timestamps()
        ansiColor("xterm")
        buildDiscarder(logRotator(numToKeepStr: '50'))
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/quarkusio/quarkus'
            }
        }
        stage('Build') {
            steps {
                sh './mvnw -V clean install -DskipTests -DskipITs -DskipDocs'
            }
        }
        stage('Test JVM') {
            options {
                timeout(time: 3, unit: 'HOURS')
            }
            steps {
                sh "./mvnw -fn clean verify -DskipDocs -pl '!integration-tests/gradle,!integration-tests/devtools'"
            }
            post {
                always {
                    junit '**/target/*-reports/TEST*.xml'
                }
            }
        }
        stage('Test Native') {
            options {
                timeout(time: 6, unit: 'HOURS')
            }
            steps {
                sh "GRAALVM_HOME=$JAVA_HOME ./mvnw -fn clean verify -DskipDocs -pl '!integration-tests/gradle,!integration-tests/devtools' -Dnative"
            }
            post {
                always {
                    junit '**/target/*-reports/TEST*.xml'
                }
            }
        }
        stage('Reports') {
            parallel {
                stage('Disk usage') {
                    steps {
                        sh 'du -cskh */*'
                    }
                }
                stage('Archive artifacts') {
                    steps {
                        archiveArtifacts artifacts: '**/target/*-reports/TEST*.xml', fingerprint: false
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}