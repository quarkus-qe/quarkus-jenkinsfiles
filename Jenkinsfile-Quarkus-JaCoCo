pipeline {
    agent any
    triggers {
        cron('H H(16-20) */3 * *')
    }
    tools {
        jdk 'graalvm'
    }
    options {
        timestamps()
        ansiColor("xterm")
        buildDiscarder(logRotator(numToKeepStr: '20'))
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/quarkusio/quarkus'
            }
        }
        stage('JaCoCo run') {
            options {
                timeout(time: 120, unit: 'MINUTES')
            }
            steps {
                sh './mvnw -fn -Ptest-coverage clean verify -Ddocker -Dtest-mariadb -Dtest-mssql -Dtest-mysql -Dtest-postgresql -Dtest-gelf -Dtest-neo4j -Dtest-kafka -Dtest-elasticsearch -Dtest-vault -Dtest-dynamodb -Dtest-keycloak -DskipDocs'
            }
        }
        stage('JaCoCo report') {
            options {
                timeout(time: 5, unit: 'MINUTES')
            }
            steps {
                sh './mvnw -f coverage-report/pom.xml package'
            }
        }
        stage('Reports') {
            steps {
                archiveArtifacts artifacts: 'coverage-report/target/site/jacoco/**', fingerprint: false
                publishHTML target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'coverage-report/target/site/jacoco/',
                    reportFiles: 'index.html',
                    reportName: 'JaCoCo report'
                ]
            }
        }
    }
    post {
        always {
            deleteDir()
        }
    }
}